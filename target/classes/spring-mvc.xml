<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">  
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
   <context:component-scan base-package="com.leavesystem.controller" />  
   <mvc:annotation-driven/>
   <!-- Tomcat默认的静态资源访问处理 -->
    <mvc:default-servlet-handler/>
   <!-- 配置静态资源文件访问，springMVC中无法直接访问静态资源文件，需要映射访问 -->
   <mvc:resources location="/assets/" mapping="/assets/**"/>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
    
	<!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
  	<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>  
	    <property name="maxUploadSize" value="10000000"/>
	</bean>
<!-- 	<mvc:interceptors>  
       配置登录拦截器，多个拦截器，顺序执行  
       <mvc:interceptor>  
           <mvc:mapping path="/**"/> 
           <mvc:exclude-mapping path="/sign-up"/>
           <mvc:exclude-mapping path="/login.jsp"/> 
           <bean class="com.leavesystem.util.UserInterceptor"></bean>  
       </mvc:interceptor>  
   </mvc:interceptors>  -->
	
</beans>  
